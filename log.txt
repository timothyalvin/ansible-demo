2024-02-23 19:46:30,838 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:46:31,407 p=21 u=root n=ansible | Using /home/student/demo/ansible.cfg as config file
2024-02-23 19:46:31,543 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 19:46:31,554 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 19:46:32,669 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:46:32,671 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:46:32,684 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 19:46:33,111 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Alice Aperson", "group": 1002, "home": "/home/alice", "item": {"dbadmin": true, "name": "Alice Aperson", "username": "alice"}, "move_home": false, "name": "alice", "shell": "/bin/bash", "state": "present", "uid": 1002}
2024-02-23 19:46:33,116 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Alice Aperson", "group": 1002, "home": "/home/alice", "item": {"dbadmin": true, "name": "Alice Aperson", "username": "alice"}, "move_home": false, "name": "alice", "shell": "/bin/bash", "state": "present", "uid": 1002}
2024-02-23 19:46:33,408 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Bob Bperson", "group": 1003, "home": "/home/bob", "item": {"dbadmin": false, "name": "Bob Bperson", "username": "bob"}, "move_home": false, "name": "bob", "shell": "/bin/bash", "state": "present", "uid": 1003}
2024-02-23 19:46:33,413 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Bob Bperson", "group": 1003, "home": "/home/bob", "item": {"dbadmin": false, "name": "Bob Bperson", "username": "bob"}, "move_home": false, "name": "bob", "shell": "/bin/bash", "state": "present", "uid": 1003}
2024-02-23 19:46:33,770 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Charles Cperson", "group": 1004, "home": "/home/charlie", "item": {"dbadmin": true, "name": "Charles Cperson", "username": "charlie"}, "move_home": false, "name": "charlie", "shell": "/bin/bash", "state": "present", "uid": 1004}
2024-02-23 19:46:33,772 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Charles Cperson", "group": 1004, "home": "/home/charlie", "item": {"dbadmin": true, "name": "Charles Cperson", "username": "charlie"}, "move_home": false, "name": "charlie", "shell": "/bin/bash", "state": "present", "uid": 1004}
2024-02-23 19:46:33,793 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 19:46:33,855 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 19:46:33,859 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 19:46:33,870 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 19:46:34,630 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}
2024-02-23 19:46:34,639 p=21 u=root n=ansible | TASK [ansible.builtin.debug] *******************************************************************
2024-02-23 19:46:34,657 p=21 u=root n=ansible | skipping: [servera.lab.example.com] => {}
2024-02-23 19:46:34,669 p=21 u=root n=ansible | TASK [copy out config] *************************************************************************
2024-02-23 19:46:35,307 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {"changed": false, "checksum": "34de56d1d865b27e8524ce7dfd4d2fbf9c2e7a82", "dest": "/etc/httpd/conf/httpd.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/httpd/conf/httpd.conf", "secontext": "system_u:object_r:httpd_config_t:s0", "size": 12291, "state": "file", "uid": 0}
2024-02-23 19:46:35,315 p=21 u=root n=ansible | TASK [doing something else] ********************************************************************
2024-02-23 19:46:35,666 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {"changed": false, "ping": "pong"}
2024-02-23 19:46:35,676 p=21 u=root n=ansible | TASK [another] *********************************************************************************
2024-02-23 19:46:35,938 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {"changed": false, "ping": "pong"}
2024-02-23 19:46:35,959 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 19:46:36,575 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}
2024-02-23 19:46:36,582 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 19:46:36,607 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 19:46:36,622 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!: 'packageresult' is undefined"
}
2024-02-23 19:46:36,634 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 19:46:37,233 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd) => {"ansible_loop_var": "item", "changed": false, "enabled": true, "item": "httpd", "name": "httpd", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2024-02-23 13:47:46 EST", "ActiveEnterTimestampMonotonic": "24377686", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "systemd-journald.socket systemd-tmpfiles-setup.service remote-fs.target nss-lookup.target sysinit.target network.target httpd-init.service tmp.mount basic.target system.slice -.mount", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Fri 2024-02-23 13:47:45 EST", "AssertTimestampMonotonic": "23629015", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "1703257000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2024-02-23 13:47:45 EST", "ConditionTimestampMonotonic": "23629015", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/httpd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The Apache HTTP Server", "DevicePolicy": "auto", "Documentation": "\"man:httpd.service(8)\"", "DynamicUser": "no", "Environment": "LANG=C", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "807", "ExecMainStartTimestamp": "Fri 2024-02-23 13:47:45 EST", "ExecMainStartTimestampMonotonic": "23630122", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; ignore_errors=no ; start_time=[Fri 2024-02-23 13:47:45 EST] ; stop_time=[n/a] ; pid=807 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; flags= ; start_time=[Fri 2024-02-23 13:47:45 EST] ; stop_time=[n/a] ; pid=807 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/httpd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "httpd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2024-02-23 13:47:45 EST", "InactiveExitTimestampMonotonic": "23630220", "InvocationID": "dd3387688e3d4fd89669aa509c6f2261", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "28", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "3492", "LimitNPROCSoft": "3492", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "3492", "LimitSIGPENDINGSoft": "3492", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "807", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "31260672", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "httpd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "-.mount system.slice sysinit.target", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "28", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Fri 2024-02-23 13:47:46 EST", "StateChangeTimestampMonotonic": "24377686", "StateDirectoryMode": "0755", "StatusErrno": "0", "StatusText": "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "213", "TasksMax": "5588", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "httpd-init.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2024-02-23 19:46:37,241 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd) => {"ansible_loop_var": "item", "changed": false, "enabled": true, "item": "httpd", "name": "httpd", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2024-02-23 13:47:48 EST", "ActiveEnterTimestampMonotonic": "18494346", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "httpd-init.service nss-lookup.target tmp.mount system.slice network.target remote-fs.target systemd-journald.socket basic.target systemd-tmpfiles-setup.service sysinit.target -.mount", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Fri 2024-02-23 13:47:47 EST", "AssertTimestampMonotonic": "17801662", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "1723371000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2024-02-23 13:47:47 EST", "ConditionTimestampMonotonic": "17801662", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/httpd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The Apache HTTP Server", "DevicePolicy": "auto", "Documentation": "\"man:httpd.service(8)\"", "DynamicUser": "no", "Environment": "LANG=C", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "805", "ExecMainStartTimestamp": "Fri 2024-02-23 13:47:47 EST", "ExecMainStartTimestampMonotonic": "17804208", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; ignore_errors=no ; start_time=[Fri 2024-02-23 13:47:47 EST] ; stop_time=[n/a] ; pid=805 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; flags= ; start_time=[Fri 2024-02-23 13:47:47 EST] ; stop_time=[n/a] ; pid=805 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/httpd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "httpd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2024-02-23 13:47:47 EST", "InactiveExitTimestampMonotonic": "17804330", "InvocationID": "d7c111c835a548f98a2b9cfe845d5713", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "28", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "3492", "LimitNPROCSoft": "3492", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "3492", "LimitSIGPENDINGSoft": "3492", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "805", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "31207424", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "httpd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target -.mount", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "28", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Fri 2024-02-23 13:47:48 EST", "StateChangeTimestampMonotonic": "18494346", "StateDirectoryMode": "0755", "StatusErrno": "0", "StatusText": "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "213", "TasksMax": "5588", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "httpd-init.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2024-02-23 19:46:37,604 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld) => {"ansible_loop_var": "item", "changed": false, "enabled": true, "item": "firewalld", "name": "firewalld", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2024-02-23 13:47:45 EST", "ActiveEnterTimestampMonotonic": "23214529", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "polkit.service system.slice sysinit.target dbus.socket dbus-broker.service basic.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Fri 2024-02-23 13:47:44 EST", "AssertTimestampMonotonic": "22367436", "Before": "network-pre.target multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "BusName": "org.fedoraproject.FirewallD1", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "321967000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2024-02-23 13:47:44 EST", "ConditionTimestampMonotonic": "22367434", "ConfigurationDirectoryMode": "0755", "Conflicts": "ebtables.service shutdown.target ip6tables.service iptables.service nftables.service ipset.service", "ControlGroup": "/system.slice/firewalld.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "firewalld - dynamic firewall daemon", "DevicePolicy": "auto", "Documentation": "\"man:firewalld(1)\"", "DynamicUser": "no", "EnvironmentFiles": "/etc/sysconfig/firewalld (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "773", "ExecMainStartTimestamp": "Fri 2024-02-23 13:47:44 EST", "ExecMainStartTimestampMonotonic": "22375652", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/firewalld ; argv[]=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS ; ignore_errors=no ; start_time=[Fri 2024-02-23 13:47:44 EST] ; stop_time=[n/a] ; pid=773 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/firewalld ; argv[]=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS ; flags= ; start_time=[Fri 2024-02-23 13:47:44 EST] ; stop_time=[n/a] ; pid=773 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/firewalld.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "firewalld.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2024-02-23 13:47:44 EST", "InactiveExitTimestampMonotonic": "22375900", "InvocationID": "d34a8580fe6544729858ab1604810d1b", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "3492", "LimitNPROCSoft": "3492", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "3492", "LimitSIGPENDINGSoft": "3492", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "773", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "41963520", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "firewalld.service dbus-org.fedoraproject.FirewallD1.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target dbus.socket system.slice", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "null", "StandardInput": "null", "StandardOutput": "null", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Fri 2024-02-23 13:47:45 EST", "StateChangeTimestampMonotonic": "23214529", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "2", "TasksMax": "5588", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "dbus", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "network-pre.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2024-02-23 19:46:37,606 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld) => {"ansible_loop_var": "item", "changed": false, "enabled": true, "item": "firewalld", "name": "firewalld", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2024-02-23 13:47:47 EST", "ActiveEnterTimestampMonotonic": "17388858", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "system.slice dbus.socket dbus-broker.service sysinit.target polkit.service basic.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Fri 2024-02-23 13:47:46 EST", "AssertTimestampMonotonic": "16454972", "Before": "shutdown.target network-pre.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "BusName": "org.fedoraproject.FirewallD1", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "320986000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2024-02-23 13:47:46 EST", "ConditionTimestampMonotonic": "16454970", "ConfigurationDirectoryMode": "0755", "Conflicts": "iptables.service ebtables.service nftables.service ipset.service ip6tables.service shutdown.target", "ControlGroup": "/system.slice/firewalld.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "firewalld - dynamic firewall daemon", "DevicePolicy": "auto", "Documentation": "\"man:firewalld(1)\"", "DynamicUser": "no", "EnvironmentFiles": "/etc/sysconfig/firewalld (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "773", "ExecMainStartTimestamp": "Fri 2024-02-23 13:47:46 EST", "ExecMainStartTimestampMonotonic": "16461621", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/firewalld ; argv[]=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS ; ignore_errors=no ; start_time=[Fri 2024-02-23 13:47:46 EST] ; stop_time=[n/a] ; pid=773 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/firewalld ; argv[]=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS ; flags= ; start_time=[Fri 2024-02-23 13:47:46 EST] ; stop_time=[n/a] ; pid=773 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/firewalld.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "firewalld.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2024-02-23 13:47:46 EST", "InactiveExitTimestampMonotonic": "16461752", "InvocationID": "628b979e4c414a2b8f522f8f82feb508", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "3492", "LimitNPROCSoft": "3492", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "3492", "LimitSIGPENDINGSoft": "3492", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "773", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "42729472", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "firewalld.service dbus-org.fedoraproject.FirewallD1.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target dbus.socket", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "null", "StandardInput": "null", "StandardOutput": "null", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Fri 2024-02-23 13:47:47 EST", "StateChangeTimestampMonotonic": "17388858", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "2", "TasksMax": "5588", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "dbus", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "network-pre.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2024-02-23 19:46:37,625 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 19:46:38,099 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {"changed": false, "msg": "Permanent and Non-Permanent(immediate) operation"}
2024-02-23 19:46:38,100 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {"changed": false, "msg": "Permanent and Non-Permanent(immediate) operation"}
2024-02-23 19:46:38,107 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 19:46:38,130 p=21 u=root n=ansible | skipping: [servera.lab.example.com] => {"skipped_reason": "Verbosity threshold not met."}
2024-02-23 19:46:38,148 p=21 u=root n=ansible | skipping: [serverb.lab.example.com] => {"skipped_reason": "Verbosity threshold not met."}
2024-02-23 19:46:38,158 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 19:46:38,690 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {"changed": false, "checksum": "38ce87e73d60d9d45b2352c3340fe482e7512890", "dest": "/var/www/html/index.html", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/var/www/html/index.html", "secontext": "system_u:object_r:httpd_sys_content_t:s0", "size": 161, "state": "file", "uid": 0}
2024-02-23 19:46:38,708 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {"changed": false, "checksum": "fb8e72ca1b7662d2a234187e0b476270977620ad", "dest": "/var/www/html/index.html", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/var/www/html/index.html", "secontext": "system_u:object_r:httpd_sys_content_t:s0", "size": 187, "state": "file", "uid": 0}
2024-02-23 19:46:38,724 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 19:46:39,126 p=21 u=root n=ansible | changed: [servera.lab.example.com] => {"changed": true, "cmd": ["/home/devops/bin/testscript"], "delta": "0:00:00.002354", "end": "2024-02-23 14:46:39.087876", "msg": "", "rc": 0, "start": "2024-02-23 14:46:39.085522", "stderr": "", "stderr_lines": [], "stdout": "FAIL", "stdout_lines": ["FAIL"]}
2024-02-23 19:46:39,130 p=21 u=root n=ansible | changed: [serverb.lab.example.com] => {"changed": true, "cmd": ["/home/devops/bin/testscript"], "delta": "0:00:00.002538", "end": "2024-02-23 14:46:39.090140", "msg": "", "rc": 0, "start": "2024-02-23 14:46:39.087602", "stderr": "", "stderr_lines": [], "stdout": "PASS", "stdout_lines": ["PASS"]}
2024-02-23 19:46:39,141 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 19:46:39,160 p=21 u=root n=ansible | skipping: [servera.lab.example.com] => {}
2024-02-23 19:46:39,212 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "it did pass"
}
2024-02-23 19:46:39,220 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 19:46:39,247 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:46:39,263 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:46:39,279 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 19:46:39,302 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:46:39,313 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:46:39,322 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 19:46:39,331 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 19:46:40,293 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 19:46:40,313 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 19:46:40,331 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 19:46:40,710 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Alice Aperson", "group": 1002, "home": "/home/alice", "item": {"dbadmin": true, "name": "Alice Aperson", "username": "alice"}, "move_home": false, "name": "alice", "shell": "/bin/bash", "state": "present", "uid": 1002}
2024-02-23 19:46:40,721 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Alice Aperson", "group": 1002, "home": "/home/alice", "item": {"dbadmin": true, "name": "Alice Aperson", "username": "alice"}, "move_home": false, "name": "alice", "shell": "/bin/bash", "state": "present", "uid": 1002}
2024-02-23 19:46:40,721 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})  => {"ansible_loop_var": "item", "changed": false, "item": {"dbadmin": false, "name": "Bob Bperson", "username": "bob"}, "skip_reason": "Conditional result was False"}
2024-02-23 19:46:40,723 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})  => {"ansible_loop_var": "item", "changed": false, "item": {"dbadmin": false, "name": "Bob Bperson", "username": "bob"}, "skip_reason": "Conditional result was False"}
2024-02-23 19:46:41,030 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Charles Cperson", "group": 1003, "home": "/home/charlie", "item": {"dbadmin": true, "name": "Charles Cperson", "username": "charlie"}, "move_home": false, "name": "charlie", "shell": "/bin/bash", "state": "present", "uid": 1003}
2024-02-23 19:46:41,034 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True}) => {"ansible_loop_var": "item", "append": false, "changed": false, "comment": "Charles Cperson", "group": 1003, "home": "/home/charlie", "item": {"dbadmin": true, "name": "Charles Cperson", "username": "charlie"}, "move_home": false, "name": "charlie", "shell": "/bin/bash", "state": "present", "uid": 1003}
2024-02-23 19:46:41,041 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 19:46:41,528 p=21 u=root n=ansible | fatal: [serverc.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:46:41,529 p=21 u=root n=ansible | fatal: [serverd.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:46:41,530 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 19:46:41,530 p=21 u=root n=ansible | servera.lab.example.com    : ok=14   changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 19:46:41,531 p=21 u=root n=ansible | serverb.lab.example.com    : ok=12   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 19:46:41,531 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:46:41,531 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:47:55,633 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:47:56,362 p=21 u=root n=ansible | PLAY [play to target webservers] ***********************************************
2024-02-23 19:47:56,373 p=21 u=root n=ansible | TASK [Gathering Facts] *********************************************************
2024-02-23 19:47:57,473 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:47:57,475 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:47:57,488 p=21 u=root n=ansible | TASK [create users] ************************************************************
2024-02-23 19:47:57,910 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:47:57,918 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:47:58,206 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 19:47:58,212 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 19:47:58,507 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:47:58,510 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:47:58,518 p=21 u=root n=ansible | TASK [run web tasks] ***********************************************************
2024-02-23 19:47:58,557 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 19:47:58,560 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 19:47:58,568 p=21 u=root n=ansible | TASK [package install] *********************************************************
2024-02-23 19:47:59,292 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:47:59,300 p=21 u=root n=ansible | TASK [ansible.builtin.debug] ***************************************************
2024-02-23 19:47:59,315 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 19:47:59,325 p=21 u=root n=ansible | TASK [copy out config] *********************************************************
2024-02-23 19:47:59,954 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:47:59,961 p=21 u=root n=ansible | TASK [doing something else] ****************************************************
2024-02-23 19:48:00,330 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:48:00,337 p=21 u=root n=ansible | TASK [another] *****************************************************************
2024-02-23 19:48:00,602 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:48:00,613 p=21 u=root n=ansible | TASK [package install] *********************************************************
2024-02-23 19:48:01,233 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:48:01,240 p=21 u=root n=ansible | TASK [show packageresult] ******************************************************
2024-02-23 19:48:01,264 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 19:48:01,276 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 19:48:01,293 p=21 u=root n=ansible | TASK [service start] ***********************************************************
2024-02-23 19:48:01,879 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 19:48:01,883 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd)
2024-02-23 19:48:02,258 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 19:48:02,260 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld)
2024-02-23 19:48:02,269 p=21 u=root n=ansible | TASK [open firewall port] ******************************************************
2024-02-23 19:48:02,731 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:48:02,733 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:48:02,744 p=21 u=root n=ansible | TASK [show the value of a variable] ********************************************
2024-02-23 19:48:02,763 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 19:48:02,778 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 19:48:02,790 p=21 u=root n=ansible | TASK [deploy content] **********************************************************
2024-02-23 19:48:03,312 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:48:03,315 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:48:03,324 p=21 u=root n=ansible | TASK [run a command] ***********************************************************
2024-02-23 19:48:03,700 p=21 u=root n=ansible | changed: [serverb.lab.example.com]
2024-02-23 19:48:03,704 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 19:48:03,712 p=21 u=root n=ansible | TASK [do something if pass] ****************************************************
2024-02-23 19:48:03,733 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 19:48:03,757 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "it did pass"
}
2024-02-23 19:48:03,768 p=21 u=root n=ansible | TASK [look at output] **********************************************************
2024-02-23 19:48:03,793 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:48:03,804 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:48:03,817 p=21 u=root n=ansible | TASK [print a message] *********************************************************
2024-02-23 19:48:03,869 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:48:03,877 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:48:03,893 p=21 u=root n=ansible | PLAY [second play] *************************************************************
2024-02-23 19:48:03,901 p=21 u=root n=ansible | TASK [Gathering Facts] *********************************************************
2024-02-23 19:48:04,891 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 19:48:05,242 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 19:48:05,257 p=21 u=root n=ansible | TASK [create users] ************************************************************
2024-02-23 19:48:05,572 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:48:05,611 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 19:48:05,639 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:48:05,681 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 19:48:05,929 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:48:05,963 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:48:05,980 p=21 u=root n=ansible | TASK [test servera] ************************************************************
2024-02-23 19:48:06,417 p=21 u=root n=ansible | fatal: [serverd.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:48:06,418 p=21 u=root n=ansible | fatal: [serverc.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:48:06,419 p=21 u=root n=ansible | PLAY RECAP *********************************************************************
2024-02-23 19:48:06,419 p=21 u=root n=ansible | servera.lab.example.com    : ok=14   changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 19:48:06,419 p=21 u=root n=ansible | serverb.lab.example.com    : ok=12   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 19:48:06,419 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:48:06,419 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:50:51,032 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:50:51,730 p=21 u=root n=ansible | PLAY [play to target webservers] ***********************************************
2024-02-23 19:50:51,740 p=21 u=root n=ansible | TASK [Gathering Facts] *********************************************************
2024-02-23 19:50:51,805 p=21 u=root n=ansible | fatal: [servera.lab.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'servera.lab.example.com,172.25.250.10' (ECDSA) to the list of known hosts.\r\ndevops@servera.lab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}
2024-02-23 19:50:51,814 p=21 u=root n=ansible | fatal: [serverb.lab.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'serverb.lab.example.com,172.25.250.11' (ECDSA) to the list of known hosts.\r\ndevops@serverb.lab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}
2024-02-23 19:50:51,818 p=21 u=root n=ansible | PLAY RECAP *********************************************************************
2024-02-23 19:50:51,819 p=21 u=root n=ansible | servera.lab.example.com    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-02-23 19:50:51,819 p=21 u=root n=ansible | serverb.lab.example.com    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-02-23 19:51:24,248 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:51:24,836 p=21 u=root n=ansible | ansible-playbook [core 2.13.3]
  config file = /home/student/demo/ansible.cfg
  configured module search path = ['/home/runner/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.9/site-packages/ansible
  ansible collection location = /home/runner/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.9.7 (default, Sep 13 2021, 08:18:39) [GCC 8.5.0 20210514 (Red Hat 8.5.0-3)]
  jinja version = 3.0.3
  libyaml = True
2024-02-23 19:51:24,836 p=21 u=root n=ansible | Using /home/student/demo/ansible.cfg as config file
2024-02-23 19:51:24,842 p=21 u=root n=ansible | host_list declined parsing /home/student/demo/inventory as it did not pass its verify_file() method
2024-02-23 19:51:24,842 p=21 u=root n=ansible | script declined parsing /home/student/demo/inventory as it did not pass its verify_file() method
2024-02-23 19:51:24,842 p=21 u=root n=ansible | auto declined parsing /home/student/demo/inventory as it did not pass its verify_file() method
2024-02-23 19:51:24,844 p=21 u=root n=ansible | Parsed /home/student/demo/inventory inventory source with ini plugin
2024-02-23 19:51:24,991 p=21 u=root n=ansible | Skipping callback 'awx_display', as we already have a stdout callback.
2024-02-23 19:51:24,992 p=21 u=root n=ansible | Skipping callback 'default', as we already have a stdout callback.
2024-02-23 19:51:24,993 p=21 u=root n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2024-02-23 19:51:24,994 p=21 u=root n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2024-02-23 19:51:24,994 p=21 u=root n=ansible | PLAYBOOK: playbook.yml *********************************************************
2024-02-23 19:51:24,996 p=21 u=root n=ansible | 2 plays in /home/student/demo/playbook.yml
2024-02-23 19:51:24,997 p=21 u=root n=ansible | PLAY [play to target webservers] ***********************************************
2024-02-23 19:51:25,010 p=21 u=root n=ansible | TASK [Gathering Facts] *********************************************************
2024-02-23 19:51:25,030 p=25 u=root n=ansible | <servera.lab.example.com> ESTABLISH SSH CONNECTION FOR USER: devops
2024-02-23 19:51:25,031 p=25 u=root n=ansible | <servera.lab.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="devops"' -o ConnectTimeout=10 -o 'ControlPath="/home/runner/.ansible/cp/1fa0a8de9d"' servera.lab.example.com '/bin/sh -c '"'"'echo ~devops && sleep 0'"'"''
2024-02-23 19:51:25,043 p=26 u=root n=ansible | <serverb.lab.example.com> ESTABLISH SSH CONNECTION FOR USER: devops
2024-02-23 19:51:25,044 p=26 u=root n=ansible | <serverb.lab.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="devops"' -o ConnectTimeout=10 -o 'ControlPath="/home/runner/.ansible/cp/272596877d"' serverb.lab.example.com '/bin/sh -c '"'"'echo ~devops && sleep 0'"'"''
2024-02-23 19:51:25,081 p=25 u=root n=ansible | <servera.lab.example.com> (255, b'', b"Warning: Permanently added 'servera.lab.example.com,172.25.250.10' (ECDSA) to the list of known hosts.\r\ndevops@servera.lab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).\r\n")
2024-02-23 19:51:25,087 p=21 u=root n=ansible | fatal: [servera.lab.example.com]: UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'servera.lab.example.com,172.25.250.10' (ECDSA) to the list of known hosts.\r\ndevops@servera.lab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2024-02-23 19:51:25,093 p=26 u=root n=ansible | <serverb.lab.example.com> (255, b'', b"Warning: Permanently added 'serverb.lab.example.com,172.25.250.11' (ECDSA) to the list of known hosts.\r\ndevops@serverb.lab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).\r\n")
2024-02-23 19:51:25,100 p=21 u=root n=ansible | fatal: [serverb.lab.example.com]: UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'serverb.lab.example.com,172.25.250.11' (ECDSA) to the list of known hosts.\r\ndevops@serverb.lab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2024-02-23 19:51:25,102 p=21 u=root n=ansible | PLAY RECAP *********************************************************************
2024-02-23 19:51:25,102 p=21 u=root n=ansible | servera.lab.example.com    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-02-23 19:51:25,102 p=21 u=root n=ansible | serverb.lab.example.com    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-02-23 19:52:15,881 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:52:34,725 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:52:40,469 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 19:52:40,480 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 19:52:41,589 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:52:41,592 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:41,605 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 19:52:42,029 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:52:42,033 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:52:42,336 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 19:52:42,339 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 19:52:42,636 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:52:42,639 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:52:42,646 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 19:52:42,688 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 19:52:42,690 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 19:52:42,705 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 19:52:43,413 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:43,420 p=21 u=root n=ansible | TASK [ansible.builtin.debug] *******************************************************************
2024-02-23 19:52:43,432 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 19:52:43,439 p=21 u=root n=ansible | TASK [copy out config] *************************************************************************
2024-02-23 19:52:44,365 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:44,372 p=21 u=root n=ansible | TASK [doing something else] ********************************************************************
2024-02-23 19:52:44,706 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:44,713 p=21 u=root n=ansible | TASK [another] *********************************************************************************
2024-02-23 19:52:44,980 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:44,994 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 19:52:45,608 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:52:45,614 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 19:52:45,638 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 19:52:45,654 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 19:52:45,664 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 19:52:46,232 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd)
2024-02-23 19:52:46,238 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 19:52:46,625 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld)
2024-02-23 19:52:46,649 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 19:52:46,660 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 19:52:47,141 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:47,143 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:52:47,150 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 19:52:47,170 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 19:52:47,181 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 19:52:47,191 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 19:52:47,702 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 19:52:47,747 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:52:47,755 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 19:52:48,132 p=21 u=root n=ansible | changed: [serverb.lab.example.com]
2024-02-23 19:52:48,132 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 19:52:48,139 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 19:52:48,155 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 19:52:48,179 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "it did pass"
}
2024-02-23 19:52:48,191 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 19:52:48,214 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:52:48,229 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:52:48,244 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 19:52:48,292 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:52:48,307 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:52:48,319 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 19:52:48,326 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 19:52:49,285 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 19:52:49,290 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 19:52:49,302 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 19:52:49,665 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:52:49,675 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:52:49,679 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 19:52:49,680 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 19:52:50,005 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:52:50,011 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:52:50,020 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 19:52:50,487 p=21 u=root n=ansible | fatal: [serverd.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:52:50,489 p=21 u=root n=ansible | fatal: [serverc.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:52:50,492 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 19:52:50,494 p=21 u=root n=ansible | servera.lab.example.com    : ok=14   changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 19:52:50,494 p=21 u=root n=ansible | serverb.lab.example.com    : ok=12   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 19:52:50,494 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:52:50,494 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:54:41,602 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:54:44,565 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 19:54:44,575 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 19:54:45,659 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:54:54,619 p=21 u=root n=ansible | fatal: [servera.lab.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 172.25.250.55 port 22: Connection timed out", "unreachable": true}
2024-02-23 19:54:54,633 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 19:54:55,038 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:54:55,320 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 19:54:55,615 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:54:55,627 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 19:54:55,654 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 19:54:55,665 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 19:54:56,393 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:54:56,402 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 19:54:56,429 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 19:54:56,438 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 19:54:57,008 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 19:54:57,421 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 19:54:57,437 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 19:54:57,950 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:54:57,958 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 19:54:57,985 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 19:54:57,993 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 19:54:58,649 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 19:54:58,656 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 19:54:59,009 p=21 u=root n=ansible | changed: [serverb.lab.example.com]
2024-02-23 19:54:59,017 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 19:54:59,046 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "it did pass"
}
2024-02-23 19:54:59,055 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 19:54:59,078 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 19:54:59,093 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 19:54:59,114 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 19:54:59,127 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 19:54:59,140 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 19:55:00,082 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 19:55:00,087 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 19:55:00,100 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 19:55:00,427 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:55:00,431 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 19:55:00,443 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 19:55:00,447 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 19:55:00,749 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:55:00,751 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 19:55:00,759 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 19:55:01,230 p=21 u=root n=ansible | fatal: [serverc.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:55:01,233 p=21 u=root n=ansible | fatal: [serverd.lab.example.com]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 111] Connection refused>", "redirected": false, "status": -1, "url": "http://servera.lab.example.com/"}
2024-02-23 19:55:01,235 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 19:55:01,236 p=21 u=root n=ansible | servera.lab.example.com    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-02-23 19:55:01,236 p=21 u=root n=ansible | serverb.lab.example.com    : ok=12   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 19:55:01,236 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 19:55:01,236 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-02-23 14:56:36,070 p=6772 u=student n=ansible | serverb.lab.example.com | FAILED! => {
    "msg": "Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support this.  Please add this host's fingerprint to your known_hosts file to manage this host."
}
2024-02-23 14:56:36,072 p=6772 u=student n=ansible | servera.lab.example.com | FAILED! => {
    "msg": "Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support this.  Please add this host's fingerprint to your known_hosts file to manage this host."
}
2024-02-23 14:57:05,738 p=6808 u=student n=ansible | serverb.lab.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2024-02-23 14:57:05,739 p=6808 u=student n=ansible | servera.lab.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2024-02-23 14:57:39,065 p=6843 u=student n=ansible | serverb.lab.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": true,
    "name": "httpd",
    "state": "started",
    "status": {
        "ActiveEnterTimestamp": "Fri 2024-02-23 13:47:46 EST",
        "ActiveEnterTimestampMonotonic": "24377686",
        "ActiveExitTimestampMonotonic": "0",
        "ActiveState": "active",
        "After": "systemd-journald.socket systemd-tmpfiles-setup.service remote-fs.target nss-lookup.target sysinit.target network.target httpd-init.service tmp.mount basic.target system.slice -.mount",
        "AllowIsolate": "no",
        "AssertResult": "yes",
        "AssertTimestamp": "Fri 2024-02-23 13:47:45 EST",
        "AssertTimestampMonotonic": "23629015",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "yes",
        "CPUAffinityFromNUMA": "no",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUQuotaPeriodUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "2117801000",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanFreeze": "yes",
        "CanIsolate": "no",
        "CanReload": "yes",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
        "CleanResult": "success",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Fri 2024-02-23 13:47:45 EST",
        "ConditionTimestampMonotonic": "23629015",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroup": "/system.slice/httpd.service",
        "ControlPID": "0",
        "CoredumpFilter": "0x33",
        "DefaultDependencies": "yes",
        "DefaultMemoryLow": "0",
        "DefaultMemoryMin": "0",
        "Delegate": "no",
        "Description": "The Apache HTTP Server",
        "DevicePolicy": "auto",
        "Documentation": "\"man:httpd.service(8)\"",
        "DynamicUser": "no",
        "Environment": "LANG=C",
        "ExecMainCode": "0",
        "ExecMainExitTimestampMonotonic": "0",
        "ExecMainPID": "807",
        "ExecMainStartTimestamp": "Fri 2024-02-23 13:47:45 EST",
        "ExecMainStartTimestampMonotonic": "23630122",
        "ExecMainStatus": "0",
        "ExecReload": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecReloadEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecStart": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; ignore_errors=no ; start_time=[Fri 2024-02-23 13:47:45 EST] ; stop_time=[n/a] ; pid=807 ; code=(null) ; status=0/0 }",
        "ExecStartEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; flags= ; start_time=[Fri 2024-02-23 13:47:45 EST] ; stop_time=[n/a] ; pid=807 ; code=(null) ; status=0/0 }",
        "ExitType": "main",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FinalKillSignal": "9",
        "FragmentPath": "/usr/lib/systemd/system/httpd.service",
        "FreezerState": "running",
        "GID": "[not set]",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOReadBytes": "18446744073709551615",
        "IOReadOperations": "18446744073709551615",
        "IOSchedulingClass": "2",
        "IOSchedulingPriority": "4",
        "IOWeight": "[not set]",
        "IOWriteBytes": "18446744073709551615",
        "IOWriteOperations": "18446744073709551615",
        "IPAccounting": "no",
        "IPEgressBytes": "[no data]",
        "IPEgressPackets": "[no data]",
        "IPIngressBytes": "[no data]",
        "IPIngressPackets": "[no data]",
        "Id": "httpd.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestampMonotonic": "0",
        "InactiveExitTimestamp": "Fri 2024-02-23 13:47:45 EST",
        "InactiveExitTimestampMonotonic": "23630220",
        "InvocationID": "dd3387688e3d4fd89669aa509c6f2261",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "mixed",
        "KillSignal": "28",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "0",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "65536",
        "LimitMEMLOCKSoft": "65536",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "524288",
        "LimitNOFILESoft": "1024",
        "LimitNPROC": "3492",
        "LimitNPROCSoft": "3492",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "3492",
        "LimitSIGPENDINGSoft": "3492",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "807",
        "ManagedOOMMemoryPressure": "auto",
        "ManagedOOMMemoryPressureLimit": "0",
        "ManagedOOMPreference": "none",
        "ManagedOOMSwap": "auto",
        "MemoryAccounting": "yes",
        "MemoryAvailable": "infinity",
        "MemoryCurrent": "31260672",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemoryMin": "0",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "NFileDescriptorStore": "0",
        "NRestarts": "0",
        "NUMAPolicy": "n/a",
        "Names": "httpd.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "main",
        "OOMPolicy": "continue",
        "OOMScoreAdjust": "0",
        "OnFailureJobMode": "replace",
        "OnSuccessJobMode": "fail",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateIPC": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "yes",
        "PrivateUsers": "no",
        "ProcSubset": "all",
        "ProtectClock": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectHostname": "no",
        "ProtectKernelLogs": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectProc": "default",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "ReloadResult": "success",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "-.mount system.slice sysinit.target",
        "RequiresMountsFor": "/var/tmp",
        "Restart": "no",
        "RestartKillSignal": "28",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "success",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "RuntimeRandomizedExtraUSec": "0",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Fri 2024-02-23 13:47:46 EST",
        "StateChangeTimestampMonotonic": "24377686",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StatusText": "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec",
        "StopWhenUnneeded": "no",
        "SubState": "running",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "2147483646",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "213",
        "TasksMax": "5588",
        "TimeoutAbortUSec": "1min 30s",
        "TimeoutCleanUSec": "infinity",
        "TimeoutStartFailureMode": "terminate",
        "TimeoutStartUSec": "1min 30s",
        "TimeoutStopFailureMode": "terminate",
        "TimeoutStopUSec": "1min 30s",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "notify",
        "UID": "[not set]",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "Wants": "httpd-init.service",
        "WatchdogSignal": "6",
        "WatchdogTimestampMonotonic": "0",
        "WatchdogUSec": "0"
    }
}
2024-02-23 14:57:39,069 p=6843 u=student n=ansible | servera.lab.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": true,
    "name": "httpd",
    "state": "started",
    "status": {
        "ActiveEnterTimestamp": "Fri 2024-02-23 13:47:48 EST",
        "ActiveEnterTimestampMonotonic": "18494346",
        "ActiveExitTimestampMonotonic": "0",
        "ActiveState": "active",
        "After": "httpd-init.service nss-lookup.target tmp.mount system.slice network.target remote-fs.target systemd-journald.socket basic.target systemd-tmpfiles-setup.service sysinit.target -.mount",
        "AllowIsolate": "no",
        "AssertResult": "yes",
        "AssertTimestamp": "Fri 2024-02-23 13:47:47 EST",
        "AssertTimestampMonotonic": "17801662",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "yes",
        "CPUAffinityFromNUMA": "no",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUQuotaPeriodUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "2157410000",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanFreeze": "yes",
        "CanIsolate": "no",
        "CanReload": "yes",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
        "CleanResult": "success",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Fri 2024-02-23 13:47:47 EST",
        "ConditionTimestampMonotonic": "17801662",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroup": "/system.slice/httpd.service",
        "ControlPID": "0",
        "CoredumpFilter": "0x33",
        "DefaultDependencies": "yes",
        "DefaultMemoryLow": "0",
        "DefaultMemoryMin": "0",
        "Delegate": "no",
        "Description": "The Apache HTTP Server",
        "DevicePolicy": "auto",
        "Documentation": "\"man:httpd.service(8)\"",
        "DynamicUser": "no",
        "Environment": "LANG=C",
        "ExecMainCode": "0",
        "ExecMainExitTimestampMonotonic": "0",
        "ExecMainPID": "805",
        "ExecMainStartTimestamp": "Fri 2024-02-23 13:47:47 EST",
        "ExecMainStartTimestampMonotonic": "17804208",
        "ExecMainStatus": "0",
        "ExecReload": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecReloadEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecStart": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; ignore_errors=no ; start_time=[Fri 2024-02-23 13:47:47 EST] ; stop_time=[n/a] ; pid=805 ; code=(null) ; status=0/0 }",
        "ExecStartEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; flags= ; start_time=[Fri 2024-02-23 13:47:47 EST] ; stop_time=[n/a] ; pid=805 ; code=(null) ; status=0/0 }",
        "ExitType": "main",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FinalKillSignal": "9",
        "FragmentPath": "/usr/lib/systemd/system/httpd.service",
        "FreezerState": "running",
        "GID": "[not set]",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOReadBytes": "18446744073709551615",
        "IOReadOperations": "18446744073709551615",
        "IOSchedulingClass": "2",
        "IOSchedulingPriority": "4",
        "IOWeight": "[not set]",
        "IOWriteBytes": "18446744073709551615",
        "IOWriteOperations": "18446744073709551615",
        "IPAccounting": "no",
        "IPEgressBytes": "[no data]",
        "IPEgressPackets": "[no data]",
        "IPIngressBytes": "[no data]",
        "IPIngressPackets": "[no data]",
        "Id": "httpd.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestampMonotonic": "0",
        "InactiveExitTimestamp": "Fri 2024-02-23 13:47:47 EST",
        "InactiveExitTimestampMonotonic": "17804330",
        "InvocationID": "d7c111c835a548f98a2b9cfe845d5713",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "mixed",
        "KillSignal": "28",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "0",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "65536",
        "LimitMEMLOCKSoft": "65536",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "524288",
        "LimitNOFILESoft": "1024",
        "LimitNPROC": "3492",
        "LimitNPROCSoft": "3492",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "3492",
        "LimitSIGPENDINGSoft": "3492",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "805",
        "ManagedOOMMemoryPressure": "auto",
        "ManagedOOMMemoryPressureLimit": "0",
        "ManagedOOMPreference": "none",
        "ManagedOOMSwap": "auto",
        "MemoryAccounting": "yes",
        "MemoryAvailable": "infinity",
        "MemoryCurrent": "31211520",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemoryMin": "0",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "NFileDescriptorStore": "0",
        "NRestarts": "0",
        "NUMAPolicy": "n/a",
        "Names": "httpd.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "main",
        "OOMPolicy": "continue",
        "OOMScoreAdjust": "0",
        "OnFailureJobMode": "replace",
        "OnSuccessJobMode": "fail",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateIPC": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "yes",
        "PrivateUsers": "no",
        "ProcSubset": "all",
        "ProtectClock": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectHostname": "no",
        "ProtectKernelLogs": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectProc": "default",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "ReloadResult": "success",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "system.slice sysinit.target -.mount",
        "RequiresMountsFor": "/var/tmp",
        "Restart": "no",
        "RestartKillSignal": "28",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "success",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "RuntimeRandomizedExtraUSec": "0",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Fri 2024-02-23 13:47:48 EST",
        "StateChangeTimestampMonotonic": "18494346",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StatusText": "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec",
        "StopWhenUnneeded": "no",
        "SubState": "running",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "2147483646",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "213",
        "TasksMax": "5588",
        "TimeoutAbortUSec": "1min 30s",
        "TimeoutCleanUSec": "infinity",
        "TimeoutStartFailureMode": "terminate",
        "TimeoutStartUSec": "1min 30s",
        "TimeoutStopFailureMode": "terminate",
        "TimeoutStopUSec": "1min 30s",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "notify",
        "UID": "[not set]",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "Wants": "httpd-init.service",
        "WatchdogSignal": "6",
        "WatchdogTimestampMonotonic": "0",
        "WatchdogUSec": "0"
    }
}
2024-02-23 14:58:21,481 p=6879 u=student n=ansible | servera.lab.example.com | FAILED! => {
    "msg": "The module ansible.posix.firewalld was not found in configured module paths"
}
2024-02-23 14:58:21,483 p=6879 u=student n=ansible | serverb.lab.example.com | FAILED! => {
    "msg": "The module ansible.posix.firewalld was not found in configured module paths"
}
2024-02-23 19:59:20,028 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:59:46,904 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 19:59:49,778 p=21 u=root n=ansible | serverb.lab.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": true,
    "name": "httpd",
    "state": "started",
    "status": {
        "ActiveEnterTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "ActiveEnterTimestampMonotonic": "4216632513",
        "ActiveExitTimestamp": "Fri 2024-02-23 14:57:37 EST",
        "ActiveExitTimestampMonotonic": "4215587679",
        "ActiveState": "active",
        "After": "systemd-journald.socket systemd-tmpfiles-setup.service remote-fs.target nss-lookup.target sysinit.target network.target httpd-init.service tmp.mount basic.target system.slice -.mount",
        "AllowIsolate": "no",
        "AssertResult": "yes",
        "AssertTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "AssertTimestampMonotonic": "4216600886",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "yes",
        "CPUAffinityFromNUMA": "no",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUQuotaPeriodUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "144351000",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanFreeze": "yes",
        "CanIsolate": "no",
        "CanReload": "yes",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
        "CleanResult": "success",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "ConditionTimestampMonotonic": "4216600886",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroup": "/system.slice/httpd.service",
        "ControlPID": "0",
        "CoredumpFilter": "0x33",
        "DefaultDependencies": "yes",
        "DefaultMemoryLow": "0",
        "DefaultMemoryMin": "0",
        "Delegate": "no",
        "Description": "The Apache HTTP Server",
        "DevicePolicy": "auto",
        "Documentation": "\"man:httpd.service(8)\"",
        "DynamicUser": "no",
        "Environment": "LANG=C",
        "ExecMainCode": "0",
        "ExecMainExitTimestampMonotonic": "0",
        "ExecMainPID": "11137",
        "ExecMainStartTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "ExecMainStartTimestampMonotonic": "4216602088",
        "ExecMainStatus": "0",
        "ExecReload": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecReloadEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecStart": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; ignore_errors=no ; start_time=[Fri 2024-02-23 14:57:38 EST] ; stop_time=[n/a] ; pid=11137 ; code=(null) ; status=0/0 }",
        "ExecStartEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; flags= ; start_time=[Fri 2024-02-23 14:57:38 EST] ; stop_time=[n/a] ; pid=11137 ; code=(null) ; status=0/0 }",
        "ExitType": "main",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FinalKillSignal": "9",
        "FragmentPath": "/usr/lib/systemd/system/httpd.service",
        "FreezerState": "running",
        "GID": "[not set]",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOReadBytes": "18446744073709551615",
        "IOReadOperations": "18446744073709551615",
        "IOSchedulingClass": "2",
        "IOSchedulingPriority": "4",
        "IOWeight": "[not set]",
        "IOWriteBytes": "18446744073709551615",
        "IOWriteOperations": "18446744073709551615",
        "IPAccounting": "no",
        "IPEgressBytes": "[no data]",
        "IPEgressPackets": "[no data]",
        "IPIngressBytes": "[no data]",
        "IPIngressPackets": "[no data]",
        "Id": "httpd.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "InactiveEnterTimestampMonotonic": "4216600346",
        "InactiveExitTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "InactiveExitTimestampMonotonic": "4216602254",
        "InvocationID": "b7e7fa2ecf1e43f49813e0d020272992",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "mixed",
        "KillSignal": "28",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "0",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "65536",
        "LimitMEMLOCKSoft": "65536",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "524288",
        "LimitNOFILESoft": "1024",
        "LimitNPROC": "3492",
        "LimitNPROCSoft": "3492",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "3492",
        "LimitSIGPENDINGSoft": "3492",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "11137",
        "ManagedOOMMemoryPressure": "auto",
        "ManagedOOMMemoryPressureLimit": "0",
        "ManagedOOMPreference": "none",
        "ManagedOOMSwap": "auto",
        "MemoryAccounting": "yes",
        "MemoryAvailable": "infinity",
        "MemoryCurrent": "25096192",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemoryMin": "0",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "NFileDescriptorStore": "0",
        "NRestarts": "0",
        "NUMAPolicy": "n/a",
        "Names": "httpd.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "main",
        "OOMPolicy": "continue",
        "OOMScoreAdjust": "0",
        "OnFailureJobMode": "replace",
        "OnSuccessJobMode": "fail",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateIPC": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "yes",
        "PrivateUsers": "no",
        "ProcSubset": "all",
        "ProtectClock": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectHostname": "no",
        "ProtectKernelLogs": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectProc": "default",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "ReloadResult": "success",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "-.mount system.slice sysinit.target",
        "RequiresMountsFor": "/var/tmp",
        "Restart": "no",
        "RestartKillSignal": "28",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "success",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "RuntimeRandomizedExtraUSec": "0",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "StateChangeTimestampMonotonic": "4216632513",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StatusText": "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec",
        "StopWhenUnneeded": "no",
        "SubState": "running",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "2147483646",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "213",
        "TasksMax": "5588",
        "TimeoutAbortUSec": "1min 30s",
        "TimeoutCleanUSec": "infinity",
        "TimeoutStartFailureMode": "terminate",
        "TimeoutStartUSec": "1min 30s",
        "TimeoutStopFailureMode": "terminate",
        "TimeoutStopUSec": "1min 30s",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "notify",
        "UID": "[not set]",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "Wants": "httpd-init.service",
        "WatchdogSignal": "6",
        "WatchdogTimestampMonotonic": "0",
        "WatchdogUSec": "0"
    }
}
2024-02-23 19:59:49,984 p=21 u=root n=ansible | servera.lab.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": true,
    "name": "httpd",
    "state": "started",
    "status": {
        "ActiveEnterTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "ActiveEnterTimestampMonotonic": "4208848948",
        "ActiveExitTimestamp": "Fri 2024-02-23 14:57:37 EST",
        "ActiveExitTimestampMonotonic": "4207803859",
        "ActiveState": "active",
        "After": "httpd-init.service nss-lookup.target tmp.mount system.slice network.target remote-fs.target systemd-journald.socket basic.target systemd-tmpfiles-setup.service sysinit.target -.mount",
        "AllowIsolate": "no",
        "AssertResult": "yes",
        "AssertTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "AssertTimestampMonotonic": "4208817482",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "yes",
        "CPUAffinityFromNUMA": "no",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUQuotaPeriodUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "150517000",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanFreeze": "yes",
        "CanIsolate": "no",
        "CanReload": "yes",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
        "CleanResult": "success",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "ConditionTimestampMonotonic": "4208817481",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroup": "/system.slice/httpd.service",
        "ControlPID": "0",
        "CoredumpFilter": "0x33",
        "DefaultDependencies": "yes",
        "DefaultMemoryLow": "0",
        "DefaultMemoryMin": "0",
        "Delegate": "no",
        "Description": "The Apache HTTP Server",
        "DevicePolicy": "auto",
        "Documentation": "\"man:httpd.service(8)\"",
        "DynamicUser": "no",
        "Environment": "LANG=C",
        "ExecMainCode": "0",
        "ExecMainExitTimestampMonotonic": "0",
        "ExecMainPID": "12676",
        "ExecMainStartTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "ExecMainStartTimestampMonotonic": "4208818606",
        "ExecMainStatus": "0",
        "ExecReload": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecReloadEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -k graceful ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecStart": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; ignore_errors=no ; start_time=[Fri 2024-02-23 14:57:38 EST] ; stop_time=[n/a] ; pid=12676 ; code=(null) ; status=0/0 }",
        "ExecStartEx": "{ path=/usr/sbin/httpd ; argv[]=/usr/sbin/httpd $OPTIONS -DFOREGROUND ; flags= ; start_time=[Fri 2024-02-23 14:57:38 EST] ; stop_time=[n/a] ; pid=12676 ; code=(null) ; status=0/0 }",
        "ExitType": "main",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FinalKillSignal": "9",
        "FragmentPath": "/usr/lib/systemd/system/httpd.service",
        "FreezerState": "running",
        "GID": "[not set]",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOReadBytes": "18446744073709551615",
        "IOReadOperations": "18446744073709551615",
        "IOSchedulingClass": "2",
        "IOSchedulingPriority": "4",
        "IOWeight": "[not set]",
        "IOWriteBytes": "18446744073709551615",
        "IOWriteOperations": "18446744073709551615",
        "IPAccounting": "no",
        "IPEgressBytes": "[no data]",
        "IPEgressPackets": "[no data]",
        "IPIngressBytes": "[no data]",
        "IPIngressPackets": "[no data]",
        "Id": "httpd.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "InactiveEnterTimestampMonotonic": "4208816931",
        "InactiveExitTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "InactiveExitTimestampMonotonic": "4208818786",
        "InvocationID": "d78e75f5e9854deca9ad12314c65835d",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "mixed",
        "KillSignal": "28",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "0",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "65536",
        "LimitMEMLOCKSoft": "65536",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "524288",
        "LimitNOFILESoft": "1024",
        "LimitNPROC": "3492",
        "LimitNPROCSoft": "3492",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "3492",
        "LimitSIGPENDINGSoft": "3492",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "12676",
        "ManagedOOMMemoryPressure": "auto",
        "ManagedOOMMemoryPressureLimit": "0",
        "ManagedOOMPreference": "none",
        "ManagedOOMSwap": "auto",
        "MemoryAccounting": "yes",
        "MemoryAvailable": "infinity",
        "MemoryCurrent": "25161728",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemoryMin": "0",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "NFileDescriptorStore": "0",
        "NRestarts": "0",
        "NUMAPolicy": "n/a",
        "Names": "httpd.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "main",
        "OOMPolicy": "continue",
        "OOMScoreAdjust": "0",
        "OnFailureJobMode": "replace",
        "OnSuccessJobMode": "fail",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateIPC": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "yes",
        "PrivateUsers": "no",
        "ProcSubset": "all",
        "ProtectClock": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectHostname": "no",
        "ProtectKernelLogs": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectProc": "default",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "ReloadResult": "success",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "system.slice sysinit.target -.mount",
        "RequiresMountsFor": "/var/tmp",
        "Restart": "no",
        "RestartKillSignal": "28",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "success",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "RuntimeRandomizedExtraUSec": "0",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Fri 2024-02-23 14:57:38 EST",
        "StateChangeTimestampMonotonic": "4208848948",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StatusText": "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec",
        "StopWhenUnneeded": "no",
        "SubState": "running",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "2147483646",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "213",
        "TasksMax": "5588",
        "TimeoutAbortUSec": "1min 30s",
        "TimeoutCleanUSec": "infinity",
        "TimeoutStartFailureMode": "terminate",
        "TimeoutStartUSec": "1min 30s",
        "TimeoutStopFailureMode": "terminate",
        "TimeoutStopUSec": "1min 30s",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "notify",
        "UID": "[not set]",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "Wants": "httpd-init.service",
        "WatchdogSignal": "6",
        "WatchdogTimestampMonotonic": "0",
        "WatchdogUSec": "0"
    }
}
2024-02-23 20:00:44,482 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 20:00:58,617 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 20:00:59,296 p=21 u=root n=ansible | playbook: /home/student/demo/playbook.yml
2024-02-23 20:01:42,021 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 20:01:42,736 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 20:01:42,748 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:01:43,838 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:43,840 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:01:43,854 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:01:44,278 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:01:44,279 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:01:44,568 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:01:44,573 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:01:44,869 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:01:44,871 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:01:44,878 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 20:01:44,918 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 20:01:44,922 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 20:01:44,932 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:01:45,649 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:45,656 p=21 u=root n=ansible | TASK [ansible.builtin.debug] *******************************************************************
2024-02-23 20:01:45,670 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:01:45,680 p=21 u=root n=ansible | TASK [copy out config] *************************************************************************
2024-02-23 20:01:46,303 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:46,311 p=21 u=root n=ansible | TASK [doing something else] ********************************************************************
2024-02-23 20:01:46,662 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:46,672 p=21 u=root n=ansible | TASK [another] *********************************************************************************
2024-02-23 20:01:46,934 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:46,953 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:01:47,559 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:01:47,569 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 20:01:47,593 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 20:01:47,603 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 20:01:47,610 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 20:01:48,175 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd)
2024-02-23 20:01:48,178 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 20:01:48,535 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 20:01:48,537 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld)
2024-02-23 20:01:48,547 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 20:01:49,019 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:01:49,020 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:49,030 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 20:01:49,052 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:01:49,070 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:01:49,080 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 20:01:49,606 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:01:49,618 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:01:49,629 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 20:01:49,992 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:01:49,995 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:01:50,005 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 20:01:50,029 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:01:50,037 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:01:50,047 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 20:01:50,071 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:01:50,086 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:01:50,100 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 20:01:50,153 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:01:50,163 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:01:50,175 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 20:01:50,189 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:01:51,132 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 20:01:51,136 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 20:01:51,147 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:01:51,513 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:01:51,518 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:01:51,536 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:01:51,544 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:01:51,835 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:01:51,861 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:01:51,875 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 20:01:52,337 p=21 u=root n=ansible | skipping: [serverd.lab.example.com]
2024-02-23 20:01:52,343 p=21 u=root n=ansible | skipping: [serverc.lab.example.com]
2024-02-23 20:01:52,372 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 20:01:52,373 p=21 u=root n=ansible | servera.lab.example.com    : ok=13   changed=0    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2024-02-23 20:01:52,373 p=21 u=root n=ansible | serverb.lab.example.com    : ok=10   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 20:01:52,373 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:01:52,373 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:02:12,268 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 20:02:13,008 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 20:02:13,019 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:02:14,124 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:14,126 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:14,140 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:02:14,569 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:14,576 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:14,856 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:02:14,858 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:02:15,152 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:15,157 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:15,171 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 20:02:15,216 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 20:02:15,218 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 20:02:15,227 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:02:15,961 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:15,971 p=21 u=root n=ansible | TASK [ansible.builtin.debug] *******************************************************************
2024-02-23 20:02:15,984 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:15,993 p=21 u=root n=ansible | TASK [copy out config] *************************************************************************
2024-02-23 20:02:16,372 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 20:02:16,388 p=21 u=root n=ansible | TASK [doing something else] ********************************************************************
2024-02-23 20:02:16,726 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:16,735 p=21 u=root n=ansible | TASK [another] *********************************************************************************
2024-02-23 20:02:17,001 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:17,018 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:02:17,614 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:17,622 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 20:02:17,647 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 20:02:17,658 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 20:02:17,665 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 20:02:18,245 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 20:02:18,260 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd)
2024-02-23 20:02:18,624 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 20:02:18,644 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld)
2024-02-23 20:02:18,660 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 20:02:19,124 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:19,131 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:19,140 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 20:02:19,165 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:19,178 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:02:19,186 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 20:02:19,761 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:19,763 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:19,773 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 20:02:20,144 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:20,146 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:02:20,156 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 20:02:20,173 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:20,184 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:02:20,191 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 20:02:20,213 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:02:20,226 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:02:20,236 p=21 u=root n=ansible | RUNNING HANDLER [restart httpd] ****************************************************************
2024-02-23 20:02:20,628 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 20:02:20,638 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 20:02:20,692 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:02:20,705 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:02:20,717 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 20:02:20,727 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:02:21,692 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 20:02:21,706 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 20:02:21,719 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:02:22,081 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:22,086 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:02:22,092 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:22,100 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:02:22,387 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:22,401 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:22,413 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 20:02:22,847 p=21 u=root n=ansible | skipping: [serverd.lab.example.com]
2024-02-23 20:02:22,847 p=21 u=root n=ansible | skipping: [serverc.lab.example.com]
2024-02-23 20:02:22,861 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 20:02:22,861 p=21 u=root n=ansible | servera.lab.example.com    : ok=14   changed=2    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2024-02-23 20:02:22,861 p=21 u=root n=ansible | serverb.lab.example.com    : ok=10   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 20:02:22,861 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:02:22,861 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:02:33,267 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 20:02:33,999 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 20:02:34,013 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:02:35,134 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:35,139 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:35,151 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:02:35,584 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:35,586 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:35,888 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:02:35,892 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:02:36,190 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:36,192 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:36,203 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 20:02:36,250 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 20:02:36,255 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 20:02:36,264 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:02:36,979 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:36,987 p=21 u=root n=ansible | TASK [ansible.builtin.debug] *******************************************************************
2024-02-23 20:02:37,003 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:37,013 p=21 u=root n=ansible | TASK [copy out config] *************************************************************************
2024-02-23 20:02:37,394 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 20:02:37,402 p=21 u=root n=ansible | TASK [doing something else] ********************************************************************
2024-02-23 20:02:37,752 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:37,763 p=21 u=root n=ansible | TASK [another] *********************************************************************************
2024-02-23 20:02:38,016 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:38,029 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:02:38,756 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:38,762 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 20:02:38,792 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 20:02:38,800 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 20:02:38,811 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 20:02:39,383 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd)
2024-02-23 20:02:39,424 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 20:02:39,761 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld)
2024-02-23 20:02:39,811 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 20:02:39,821 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 20:02:40,275 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:40,287 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:40,301 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 20:02:40,322 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:40,336 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:02:40,345 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 20:02:40,937 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:02:40,943 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:02:40,951 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 20:02:41,326 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:41,327 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:02:41,337 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 20:02:41,353 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:02:41,365 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:02:41,379 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 20:02:41,435 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:02:41,447 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:02:41,457 p=21 u=root n=ansible | RUNNING HANDLER [restart httpd] ****************************************************************
2024-02-23 20:02:41,847 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 20:02:41,854 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 20:02:41,911 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:02:41,921 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:02:41,933 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 20:02:41,940 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:02:42,911 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 20:02:42,915 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 20:02:42,934 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:02:43,291 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:43,296 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:02:43,309 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:02:43,317 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:02:43,615 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:43,625 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:02:43,638 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 20:02:44,073 p=21 u=root n=ansible | skipping: [serverc.lab.example.com]
2024-02-23 20:02:44,076 p=21 u=root n=ansible | skipping: [serverd.lab.example.com]
2024-02-23 20:02:44,089 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 20:02:44,091 p=21 u=root n=ansible | servera.lab.example.com    : ok=14   changed=2    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2024-02-23 20:02:44,091 p=21 u=root n=ansible | serverb.lab.example.com    : ok=10   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 20:02:44,091 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:02:44,091 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:03:31,984 p=16 u=root n=ansible | {"/usr/share/ansible/collections/ansible_collections": {"amazon.aws": {"version": "3.2.0"}, "ansible.controller": {"version": "4.2.1"}, "ansible.netcommon": {"version": "3.0.0"}, "ansible.network": {"version": "1.2.0"}, "ansible.posix": {"version": "1.3.0"}, "ansible.security": {"version": "1.0.0"}, "ansible.utils": {"version": "2.6.1"}, "ansible.windows": {"version": "1.9.0"}, "ansible.yang": {"version": "1.0.0"}, "arista.eos": {"version": "5.0.0"}, "cisco.asa": {"version": "3.0.0"}, "cisco.ios": {"version": "3.0.0"}, "cisco.iosxr": {"version": "3.0.0"}, "cisco.nxos": {"version": "3.0.0"}, "cloud.common": {"version": "2.1.1"}, "frr.frr": {"version": "2.0.0"}, "ibm.qradar": {"version": "2.0.0"}, "junipernetworks.junos": {"version": "3.0.0"}, "kubernetes.core": {"version": "2.2.3"}, "openvswitch.openvswitch": {"version": "2.1.0"}, "redhat.insights": {"version": "1.0.7"}, "redhat.openshift": {"version": "2.1.0"}, "redhat.rhv": {"version": "1.6.5"}, "redhat.satellite": {"version": "3.3.0"}, "servicenow.itsm": {"version": "1.3.3"}, "splunk.es": {"version": "2.0.0"}, "trendmicro.deepsec": {"version": "2.0.0"}, "vmware.vmware_rest": {"version": "2.1.5"}, "vyos.vyos": {"version": "3.0.0"}}}
2024-02-23 20:03:32,706 p=21 u=root n=ansible | PLAY [play to target webservers] ***************************************************************
2024-02-23 20:03:32,720 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:03:33,803 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:03:33,808 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:03:33,820 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:03:34,302 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:03:34,305 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:03:34,653 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:03:34,655 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False})
2024-02-23 20:03:34,970 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:03:34,974 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:03:34,985 p=21 u=root n=ansible | TASK [run web tasks] ***************************************************************************
2024-02-23 20:03:35,038 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks.yml for servera.lab.example.com
2024-02-23 20:03:35,041 p=21 u=root n=ansible | included: /home/student/demo/tasks/web_tasks_serverb.yml for serverb.lab.example.com
2024-02-23 20:03:35,052 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:03:35,842 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:03:35,849 p=21 u=root n=ansible | TASK [ansible.builtin.debug] *******************************************************************
2024-02-23 20:03:35,861 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:03:35,872 p=21 u=root n=ansible | TASK [copy out config] *************************************************************************
2024-02-23 20:03:36,895 p=21 u=root n=ansible | [0;31m--- before: /etc/httpd/conf/httpd.conf[0m
[0;31m[0m[0;32m+++ after: /home/runner/.ansible/tmp/ansible-local-21hzl30lu7/tmp1jnt743t/httpd.conf.j2[0m
[0;32m[0m[0;36m@@ -1,5 +1,5 @@[0m
[0;36m[0m #
[0;31m-# This is the main Apache HTTP server configuration file.  It contains the[0m
[0;31m[0m[0;32m+# change change changeThis is the main Apache HTTP server configuration file.  It contains the[0m
[0;32m[0m # configuration directives that give the server its instructions.
 # See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
 # In particular, see 


2024-02-23 20:03:36,896 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 20:03:36,905 p=21 u=root n=ansible | TASK [doing something else] ********************************************************************
2024-02-23 20:03:37,425 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:03:37,435 p=21 u=root n=ansible | TASK [another] *********************************************************************************
2024-02-23 20:03:37,722 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:03:37,741 p=21 u=root n=ansible | TASK [package install] *************************************************************************
2024-02-23 20:03:38,392 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:03:38,399 p=21 u=root n=ansible | TASK [show packageresult] **********************************************************************
2024-02-23 20:03:38,423 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "packageresult": {
        "changed": false,
        "failed": false,
        "msg": "Nothing to do",
        "rc": 0,
        "results": []
    }
}
2024-02-23 20:03:38,437 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "packageresult": "VARIABLE IS NOT DEFINED!"
}
2024-02-23 20:03:38,446 p=21 u=root n=ansible | TASK [service start] ***************************************************************************
2024-02-23 20:03:39,136 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=httpd)
2024-02-23 20:03:39,141 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=httpd)
2024-02-23 20:03:39,551 p=21 u=root n=ansible | ok: [servera.lab.example.com] => (item=firewalld)
2024-02-23 20:03:39,555 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => (item=firewalld)
2024-02-23 20:03:39,571 p=21 u=root n=ansible | TASK [open firewall port] **********************************************************************
2024-02-23 20:03:40,103 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:03:40,104 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:03:40,111 p=21 u=root n=ansible | TASK [show the value of a variable] ************************************************************
2024-02-23 20:03:40,136 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:03:40,151 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:03:40,161 p=21 u=root n=ansible | TASK [deploy content] **************************************************************************
2024-02-23 20:03:40,717 p=21 u=root n=ansible | ok: [servera.lab.example.com]
2024-02-23 20:03:40,718 p=21 u=root n=ansible | ok: [serverb.lab.example.com]
2024-02-23 20:03:40,727 p=21 u=root n=ansible | TASK [run a command] ***************************************************************************
2024-02-23 20:03:41,145 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:03:41,147 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:03:41,156 p=21 u=root n=ansible | TASK [do something if pass] ********************************************************************
2024-02-23 20:03:41,170 p=21 u=root n=ansible | skipping: [servera.lab.example.com]
2024-02-23 20:03:41,182 p=21 u=root n=ansible | skipping: [serverb.lab.example.com]
2024-02-23 20:03:41,189 p=21 u=root n=ansible | TASK [look at output] **************************************************************************
2024-02-23 20:03:41,256 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:03:41,271 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "groups": {
        "all": [
            "servera.lab.example.com",
            "serverb.lab.example.com",
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "database": [
            "serverc.lab.example.com",
            "serverd.lab.example.com"
        ],
        "hawaii": [
            "serverb.lab.example.com",
            "serverd.lab.example.com"
        ],
        "texas": [
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "ungrouped": [],
        "usa": [
            "serverb.lab.example.com",
            "serverd.lab.example.com",
            "servera.lab.example.com",
            "serverc.lab.example.com"
        ],
        "webservers": [
            "servera.lab.example.com",
            "serverb.lab.example.com"
        ]
    }
}
2024-02-23 20:03:41,281 p=21 u=root n=ansible | RUNNING HANDLER [restart httpd] ****************************************************************
2024-02-23 20:03:41,649 p=21 u=root n=ansible | changed: [servera.lab.example.com]
2024-02-23 20:03:41,662 p=21 u=root n=ansible | TASK [print a message] *************************************************************************
2024-02-23 20:03:41,692 p=21 u=root n=ansible | ok: [servera.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:03:41,704 p=21 u=root n=ansible | ok: [serverb.lab.example.com] => {
    "msg": "end of play after handlers"
}
2024-02-23 20:03:41,719 p=21 u=root n=ansible | PLAY [second play] *****************************************************************************
2024-02-23 20:03:41,725 p=21 u=root n=ansible | TASK [Gathering Facts] *************************************************************************
2024-02-23 20:03:42,752 p=21 u=root n=ansible | ok: [serverc.lab.example.com]
2024-02-23 20:03:42,759 p=21 u=root n=ansible | ok: [serverd.lab.example.com]
2024-02-23 20:03:42,772 p=21 u=root n=ansible | TASK [create users] ****************************************************************************
2024-02-23 20:03:43,159 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:03:43,164 p=21 u=root n=ansible | skipping: [serverc.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:03:43,177 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Alice Aperson', 'username': 'alice', 'dbadmin': True})
2024-02-23 20:03:43,178 p=21 u=root n=ansible | skipping: [serverd.lab.example.com] => (item={'name': 'Bob Bperson', 'username': 'bob', 'dbadmin': False}) 
2024-02-23 20:03:43,481 p=21 u=root n=ansible | ok: [serverc.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:03:43,486 p=21 u=root n=ansible | ok: [serverd.lab.example.com] => (item={'name': 'Charles Cperson', 'username': 'charlie', 'dbadmin': True})
2024-02-23 20:03:43,495 p=21 u=root n=ansible | TASK [test servera] ****************************************************************************
2024-02-23 20:03:43,932 p=21 u=root n=ansible | skipping: [serverd.lab.example.com]
2024-02-23 20:03:43,944 p=21 u=root n=ansible | skipping: [serverc.lab.example.com]
2024-02-23 20:03:43,963 p=21 u=root n=ansible | PLAY RECAP *************************************************************************************
2024-02-23 20:03:43,963 p=21 u=root n=ansible | servera.lab.example.com    : ok=14   changed=2    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2024-02-23 20:03:43,963 p=21 u=root n=ansible | serverb.lab.example.com    : ok=10   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-02-23 20:03:43,963 p=21 u=root n=ansible | serverc.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2024-02-23 20:03:43,964 p=21 u=root n=ansible | serverd.lab.example.com    : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
