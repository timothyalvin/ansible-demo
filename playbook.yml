---
- name: play to target webservers
  hosts: webservers
  vars:
    filename_to_deploy: index.html
    valid_distros:
      - RedHat
      - CentOS
      - Fedora
    apache_port: 80
    allow_override: false
  tasks:

    - name: create users
      ansible.builtin.user:
        name: '{{ item.username }}'
        comment: '{{ item.name }}'
        state: present
      loop: '{{ users_to_create }}'


    - name: run web tasks
      include_tasks: '{{ task_file }}'

    - name: show packageresult
      ansible.builtin.debug:
        var: packageresult

    - name: service start
      ansible.builtin.service:
        name: '{{ item }}'
        state: started
        enabled: true
      loop: '{{ web_services }}'

    - name: open firewall port
      ansible.posix.firewalld:
        port: '{{ apache_port }}/tcp'
        immediate: true
        permanent: true
        state: enabled

    - name: show the value of a variable
      ansible.builtin.debug:
        var: content_to_deploy
        verbosity: 2

    - name: deploy content
      ansible.builtin.copy:
        content: |
          {{ content_to_deploy }}
          Distribution is {{ ansible_facts.distribution }}
          Version is {{ ansible_facts.distribution_major_version }}
          IP address is {{ ansible_facts.default_ipv4.address }}
          IP address is {{ ansible_facts['default_ipv4']['address'] }}
          Distribution is {{ ansible_distribution }}
        dest: /var/www/html/{{ filename_to_deploy }}
      register: copyresult

  handlers:
    - name: restart httpd
      ansible.builtin.service:
        name: httpd
        state: restarted

- name: second play
  hosts: database
  become: true
  tasks:

    - name: create users
      ansible.builtin.user:
        name: '{{ item.username }}'
        comment: '{{ item.name }}'
        state: present
      loop: '{{ users_to_create }}'
      when: item.dbadmin == true     

    - name: test servera
      ansible.builtin.uri:
        url: http://servera.lab.example.com/
